// vim: set syntax=c:
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        lpar_rpar: lpar_rpar {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_RPAR";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp RIGHT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbkt_rbkt: lbkt_rbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_RBKT";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp RIGHT_BRACKET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbrc_rbrc: lbrc_rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRC_RBRC";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACE>,
                <&kp RIGHT_BRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dqt_sqt: dqt_sqt {
            compatible = "zmk,behavior-mod-morph";
            label = "dqt_sqt";
            #binding-cells = <0>;
            bindings =
                <&kp DQT>,
                <&kp SQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "dot_comma";
            #binding-cells = <0>;
            bindings =
                <&kp DOT>,
                <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zero_five: zero_five {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_FIVE";
            #binding-cells = <0>;
            bindings =
                <&kp N0>,
                <&kp N5>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        one_six: one_six {
            compatible = "zmk,behavior-mod-morph";
            label = "ONE_SIX";
            #binding-cells = <0>;
            bindings =
                <&kp N1>,
                <&kp N6>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two_seven: two_seven {
            compatible = "zmk,behavior-mod-morph";
            label = "TWO_SEVEN";
            #binding-cells = <0>;
            bindings =
                <&kp N2>,
                <&kp N7>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        three_eight: three_eight {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_EIGHT";
            #binding-cells = <0>;
            bindings =
                <&kp N3>,
                <&kp N8>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        four_nine: four_nine {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_NINE";
            #binding-cells = <0>;
            bindings =
                <&kp N4>,
                <&kp N9>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        voldn_volup: voldn_volup {
            compatible = "zmk,behavior-mod-morph";
            label = "voldn_volup";
            #binding-cells = <0>;
            bindings =
                <&kp K_VOL_DN>,
                <&kp K_VOL_UP>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bridn_briup: bridn_briup {
            compatible = "zmk,behavior-mod-morph";
            label = "bridn_briup";
            #binding-cells = <0>;
            bindings =
                <&kp C_BRI_DN>,
                <&kp C_BRI_UP>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sub_add: sub_add {
            compatible = "zmk,behavior-mod-morph";
            label = "sub_add";
            #binding-cells = <0>;
            bindings =
                <&kp MINUS>,
                <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lang_rang: lang_rang {
            compatible = "zmk,behavior-mod-morph";
            label = "lang_rang";
            #binding-cells = <0>;
            bindings =
                <&kp LESS_THAN>,
                <&kp GREATER_THAN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slashes: slashes {
            compatible = "zmk,behavior-mod-morph";
            label = "slashes";
            #binding-cells = <0>;
            bindings =
                <&kp FSLH>,
                <&kp BSLH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        prscrn: prscrn {
            compatible = "zmk,behavior-mod-morph";
            label = "PRSCRN";
            bindings =
                <&kp PRINTSCREEN>,
                <&kp LG(PRINTSCREEN)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        NE_is_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <16 17>;
        };

        ST_is_TAB {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        RS_is_ENT {
            bindings = <&kp ENTER>;
            key-positions = <11 12>;
        };

        EI_is_BKS {
            bindings = <&kp BACKSPACE>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            label = "DEF";
            bindings = <
  &kp Q  &kp W      &kp F      &kp P  &kp B       &kp J      &kp L       &kp U       &kp Y    &dqt_sqt
  &kp A  &kp R      &kp S      &kp T  &kp G       &kp M      &kp N       &kp E       &kp I       &kp O
  &kp Z  &kp X      &kp C      &kp D  &kp V       &kp K      &kp H  &lpar_rpar  &lbkt_rbkt  &lbkt_rbkt
                &kp LMETA  &kp LCTRL  &mo 1    &kp RALT  &kp SPACE  &kp RSHIFT
            >;
        };

        Symbols {
            bindings = <
     &kp AT  &kp EXCLAMATION  &kp POUND  &kp QUESTION  &kp PERCENT     &kp CARET  &kp AMPERSAND     &kp ASTRK  &kp DELETE    &kp DOLLAR
  &kp TILDE       &lang_rang   &sub_add    &dot_comma     &slashes    &four_nine     &zero_five      &one_six  &two_seven  &three_eight
  &kp GRAVE   &kp UNDERSCORE  &kp EQUAL      &kp PIPE     &kp SEMI    &kp K_MUTE   &voldn_volup  &bridn_briup     &prscrn         &none
                                  &none         &none        &none         &none          &none    &kp RSHIFT
            >;

            label = "SYM";
        };
    };
};
