// vim: set syntax=c:
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        lpar_rpar: lpar_rpar {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_RPAR";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp RIGHT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbkt_rbkt: lbkt_rbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_RBKT";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp RIGHT_BRACKET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbkt_rbkt: lbkt_rbkt {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_RBKT";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp RIGHT_BRACKET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        lbrc_rbrc: lbrc_rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRC_RBRC";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACE>,
                <&kp RIGHT_BRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            label = "DEF";
            bindings = <
  &kp Q       &kp W                 &kp F             &kp P  &kp B        &kp J           &kp L          &kp U              &kp Y  &kp LEFT_BRACE
  &kp A  &mt LALT R           &mt LMETA S       &mt LCTRL T  &kp G        &kp M           &kp N          &kp E              &kp I           &kp O
  &kp Z       &kp X                 &kp C             &kp D  &kp V        &kp K           &kp H        &kp DOT  &kp DOUBLE_QUOTES   &kp SEMICOLON
                     &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &to 1    &kp SPACE  &mt RSHIFT ESC  &kp BACKSPACE
            >;
        };

        Extra {
            bindings = <
  &none             &none      &none         &none     &none     &none  &kp N7  &kp N8  &kp N9  &none
  &none  &kp GREATER_THAN   &kp PLUS  &kp QUESTION  &kp FSLH     &none  &kp N4  &kp N5  &kp N6  &none
  &none     &kp LESS_THAN  &kp MINUS      &kp PIPE  &kp BSLH    &kp N0  &kp N1  &kp N2  &kp N3  &none
                               &none         &none     &to 0     &none   &none   &none
            >;

            label = "EXT";
        };
    };
};
